--setting
_G.mul = 3.6576
--[[
Arctic - 3.6576
Alantis - 3.658
Candy - 3.659
Cyber - 3.659
Dimension - 3.659
Facility - 3.66
Forest - 3.66
Graveyard - 3.66
Grove - 3.66
Island - 3.66
Mineshaft - 3.66
Oasis - 3.66
Redwood - 3.66
Temple - 3.66
]]
--mechanic

game:GetService("UserInputService").InputBegan:Connect(function(i)
    if i.KeyCode == Enum.KeyCode.C then
        for i,v in pairs(game.Workspace:GetDescendants()) do
            if v.Name == "TextLabel" and v.Text == "YOU" then
                a = v.Parent.Parent.Parent.Parent.AimIndicator.Triangle
                if a ~= nil then
                    getgenv().ok = true
                else
                    getgenv().ok = false
                end
            end
        end
        if ok then
            local u8 = require(game:GetService("Players").LocalPlayer.PlayerScripts.Controllers.GameController)
            local Map = u8.CurrentGame.Map.Name
            local Hole = u8.CurrentGame:Get("CurrentHole")
            local ewe = Instance.new("Part")
            ewe.Name = "Part1"
            ewe.Parent = workspace
            ewe.Size = Vector3.new(1,1,1)
            ewe.Position = game:GetService("Workspace")[Map].Holes[Hole].Start.Start.Position + Vector3.new(0.0892,0,0)
            ewe.Anchored = true
            ewe.Shape = "Ball"
            ewe.Transparency = 1

            for i,v in pairs(game.Workspace:GetDescendants()) do
                if v.Name == "TextLabel" and v.Text == "YOU" then
                    b = v.Parent.Parent.Position
                end
            end
            local a = game.Workspace.Part1.Position
            local Part = Instance.new("Part")
            Part.Parent = game.Workspace
            Part.Anchored = true
            Part.Name = "Part2"
            local Distance = (a-b).Magnitude
            Part.CFrame = CFrame.new(a,b) * CFrame.new(0,0,-Distance/2)
            Part.Size = Vector3.new(0.05,0.05,Distance)
            Part.Transparency = 1

            local lp = game:FindService("Players").LocalPlayer
            local remote = getupvalue(require(lp:WaitForChild("PlayerScripts"):WaitForChild("Controllers"):WaitForChild("MechanicsController")).Shoot,3)
            local S_Players_5 = game:GetService("Players")
            local a = require(S_Players_5.LocalPlayer.PlayerScripts.Controllers:WaitForChild("CameraController"))
            local aim = a:GetCamera("Classic").Rotation.Y

            function a()
            remote.Parent = game:GetService("ReplicatedStorage")
            end

            for i,v in pairs(game.Workspace:GetDescendants()) do
                if v.Name == "TextLabel" and v.Text == "YOU" then
                    rot1 = v.Parent.Parent.Parent.Parent.AimIndicator.Triangle.Rotation.Z
                    ball = v.Parent.Parent.Position
                end
            end
            local rot2 = game.Workspace.Part2.Rotation.Y
            local rota = game.Workspace.Part2.Rotation
            local obj = game.Workspace.Part1.Position
            local distance = (ball - obj).magnitude
            local power = distance * math.sqrt(distance) / distance * _G.mul - (distance * 0.0015) + (distance - 10)*0.0005 
            local deg1 = ((180 - rot1) + (180-rot2)) / (180/math.pi)
            local deg =  (rot1 + rot2) / (180/math.pi)
            local cal1 = deg1 + aim
            local cal = deg + aim
            if rota.X > -181 and rota.X < -170 and rota.Z > 0 and rota.Z < 10 then
                remote:FireServer(tonumber(cal1), tonumber(power), true)
            end
            if rota.X < -0.01 and rota.X > -10 and rota.Z > 0 and rota.Z < 10 then
                remote:FireServer(tonumber(cal), tonumber(power), true)
            end
            if rota.X < -0.01 and rota.X > -10 and rota.Z < 0 then
                remote:FireServer(tonumber(cal), tonumber(power), true)
            end
            if rota.X < -170 and rota.Y < 0 and rota.Z < 0 then
                remote:FireServer(tonumber((180/(180/math.pi))-cal), tonumber(power), true)
            end
            if rota.X < 0 and rota.X > -10 and rota.Y < 0 and rota.Z < 0 then
                remote:FireServer(tonumber(cal), tonumber(power), true)
            end
            if rota.X < 0 and rota.X > -10 and rota.Y > -0.0001 and rota.Z > -0.001 then
                remote:FireServer(tonumber(cal), tonumber(power), true)
            end
            if rota.X < -170 and rota.Y > 0 and rota.Z > -0.001 then
                remote:FireServer(tonumber((180/(180/math.pi))-cal), tonumber(power), true)
            end
            if rota.X < 0 and rota.Y < 0 and rota.Z > -0.001 then
                remote:FireServer(tonumber((180/(180/math.pi))-cal), tonumber(power), true)
            end
            if rota.X > -0.0001 and rota.Y > -0.0001 and rota.Z > -0.0001 then
                remote:FireServer(tonumber((180/(180/math.pi) + cal1)), tonumber(power), true)
            end
            if rota.X > 170 and rota.Y > 0 and rota.Z < 0 then
                remote:FireServer(tonumber((180/(180/math.pi))-cal), tonumber(power), true)
            end
            if rota.X > -0.0001 and rota.X < 10 and rota.Y < 0 and rota.Z > -0.0001 then
                remote:FireServer(tonumber(cal), tonumber(power), true)
            end
            if rota.X > 170 and rota.Y < 0 and rota.Z > 170 then
                remote:FireServer(tonumber((180/(180/math.pi))-cal), tonumber(power), true)
            end
            if rota.X > -0.0001 and rota.X < 10 and rota.Y > 0 and rota.Z < 0 then
                remote:FireServer(tonumber(cal), tonumber(power), true)
            end
            task.wait(0.01)
            for i,v in pairs(game.Workspace:GetChildren()) do
                if v.Name == "Part1" or v.Name == "Part2" then
                    v:Destroy()
                end
            end
            while wait(0.1) do
                pcall(function()
                    a()
                end)
            end
        end
    end
end)
